            conv1 = tf.nn.relu(tf.layers.conv2d( \
                inputs=self.input_conv, filters=16, \
                kernel_size=[4, 4], strides=[1, 1], padding='VALID', \
                name=myScope + '_net_conv1'))
            conv2 = tf.nn.relu(tf.layers.conv2d( \
                 inputs=conv1, filters=32, \
                 kernel_size=[4, 4], strides=[1, 1], padding='VALID', \
                 name=myScope + '_net_conv2'))
            conv3 = tf.nn.relu(tf.layers.conv2d( \
                 inputs=conv2, filters=32, \
                 kernel_size=[3, 3], strides=[1, 1], padding='VALID', \
                 name=myScope + '_net_conv3'))
            conv4 = tf.nn.relu(tf.layers.conv2d( \
                 inputs=conv3, filters=32, \
                 kernel_size=[3, 3], strides=[1, 1], padding='VALID', \
                 name=myScope + '_net_conv4'))
            convFlat = tf.reshape(slim.flatten(conv4), [self.batch_size, self.trainLength, self.h_size],
                                       name=myScope + '_convlution_flattern')